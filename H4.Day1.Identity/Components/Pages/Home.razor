@page "/"
@using Microsoft.AspNetCore.Authorization
@inject AuthenticationStateProvider AuthenticationStateProvider
@* @attribute [Authorize(Policy = "AuthenticatedUser")] *@
@attribute [Authorize(Policy = "RequireAdminRole")]

<PageTitle>Home</PageTitle>

@* <AuthorizeView>
    <Authorized>
        <h1>Hello, world!</h1>

        Welcome to your new app.
    </Authorized>
    <NotAuthorized>
        <div>You are NOT logged in.</div>
    </NotAuthorized>
</AuthorizeView> *@

@if (_isAuthenticated)
{
    <h1>Hello, world!</h1>
    <div>Welcome to your new app. (From code)</div>
    @if (_isAdmin)
    {
        <div>Look at this here Admin fella! 😎</div>
    }
}
else
{
    <div>You are NOT logged in. (From Code)</div>
}

<AuthorizeView>
    <Authorized>
        <h1>Hello, world!</h1>

        Welcome to your new app.
    </Authorized>
    <NotAuthorized>
        <div>You are NOT logged in.</div>
    </NotAuthorized>
</AuthorizeView>
<AuthorizeView Roles="Admin">
    <Authorized>
        <div>You are Admin!</div>
    </Authorized>
</AuthorizeView>

@code {
    private bool _isAuthenticated;
    private bool _isAdmin;
    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        _isAuthenticated = user.Identity?.IsAuthenticated ?? false;
        _isAdmin = user.IsInRole("Admin");
    }
}
